{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(''); // const [enteredNameIsValid,setEnteredNameIsValid] = useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName); // const enteredValue = nameInputRef.current.value\n    // console.log(enteredValue)\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"UHQRS0acA1z3o9bROjC66J3gzWE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","e","preventDefault","setEnteredNameIsValid","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAK,CAACC,WAAD,EAAcC,cAAd,IAA8BJ,QAAQ,CAAC,EAAD,CAA3C,CAF6B,CAG7B;;AACA,QAAM,CAACK,kBAAD,EAAoBC,qBAApB,IAA6CN,QAAQ,CAAC,KAAD,CAA3D;AAEA,QAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAsB,EAAjD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;;AAEA,QAAMK,sBAAsB,GAAGC,KAAK,IAAI;AACtCP,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAED,GAHD;;AAKA,QAAMC,oBAAoB,GAAGH,KAAK,IAAI;AACpCL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAED,GAHD;;AAIA,QAAMS,qBAAqB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAG,CAACC,kBAAJ,EAAuB;AACrB;AACD;;AACDW,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ,EAPmC,CAQnC;AACA;AACD,GAVD;;AAYA,QAAMkB,gBAAgB,GAAGZ,kBAAkB,GAAG,sBAAH,GAA2B,cAAtE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEM,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,EAAE,EAAC,MADf;AAEC,QAAA,QAAQ,EAAEX,sBAFX;AAGC,QAAA,MAAM,EAAEI,oBAHT;AAIC,QAAA,KAAK,EAAEX;AAJR;AAAA;AAAA;AAAA;AAAA,cAFF,EAQIM,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAR1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDD;;GAAMR,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const[enteredName, setEnteredName]=useState('');\n  // const [enteredNameIsValid,setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched,setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !=='';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  \n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    \n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    \n  }\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if(!enteredNameIsValid){\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log(enteredName)\n    // const enteredValue = nameInputRef.current.value\n    // console.log(enteredValue)\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid': 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' id='name'\n         onChange={nameInputChangeHandler} \n         onBlur={nameInputBlurHandler}\n         value={enteredName}\n         />\n         {nameInputIsInvalid && <p className='error-text'>Name must not be empty </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}