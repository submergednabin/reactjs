{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  const onChangeHandler = e => {};\n\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ngtH+yqOkQyah7a4mP7Zbna8hsI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","nameInputChangeHandler","event","target","value","formSubmissionHandler","e","preventDefault","trim","console","log","enteredValue","current","onChangeHandler","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAK,CAACK,WAAD,EAAcC,cAAd,IAA8BL,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACM,kBAAD,EAAoBC,qBAApB,IAA6CP,QAAQ,CAAC,IAAD,CAA3D;;AAEA,QAAMQ,sBAAsB,GAAGC,KAAK,IAAI;AACtCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGV,WAAW,CAACW,IAAZ,OAAqB,EAAxB,EAA2B;AACzBR,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AACA,UAAMc,YAAY,GAAGf,YAAY,CAACgB,OAAb,CAAqBR,KAA1C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD,GAVD;;AAYA,QAAME,eAAe,GAAIP,CAAD,IAAM,CAE7B,CAFD;;AAIA,QAAMQ,gBAAgB,GAAGf,kBAAkB,GAAG,cAAH,GAAmB,sBAA9D;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEM,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAES,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAElB,YAAZ;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,EAAE,EAAC,MADf;AAEC,QAAA,QAAQ,EAAEK,sBAFX;AAGC,QAAA,KAAK,EAAEJ;AAHR;AAAA;AAAA;AAAA;AAAA,cAFF,EAOI,CAACE,kBAAD,iBAAuB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzCD;;GAAML,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const[enteredName, setEnteredName]=useState('');\n  const [enteredNameIsValid,setEnteredNameIsValid] = useState(true);\n  \n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    if(enteredName.trim()===''){\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log(enteredName)\n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue)\n  }\n\n  const onChangeHandler = (e) =>{\n      \n  }\n\n  const nameInputClasses = enteredNameIsValid ? 'form-control': 'form-control invalid'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} \n        type='text' id='name'\n         onChange={nameInputChangeHandler} \n         value={enteredName}\n         />\n         {!enteredNameIsValid && <p className='error-text'>Name must not be empty </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}