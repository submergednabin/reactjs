{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name Input is Valid');\n    }\n  }, []);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  const onChangeHandler = e => {};\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ssqmJfPkM8rBf0S6+Ppsyz0Ubh0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/FormValidationReact/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","e","preventDefault","trim","enteredValue","current","onChangeHandler","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAK,CAACK,WAAD,EAAcC,cAAd,IAA8BL,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACM,kBAAD,EAAoBC,qBAApB,IAA6CP,QAAQ,CAAC,KAAD,CAA3D;AACA,QAAM,CAACQ,kBAAD,EAAoBC,qBAApB,IAA6CT,QAAQ,CAAC,KAAD,CAA3D;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGQ,kBAAH,EAAsB;AACpBI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,sBAAsB,GAAGC,KAAK,IAAI;AACtCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAGL,WAAW,CAACe,IAAZ,OAAqB,EAAxB,EAA2B;AACzBZ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AAEA;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,UAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAb,CAAqBN,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYS,YAAZ;AACD,GAZD;;AAcA,QAAME,eAAe,GAAIL,CAAD,IAAM,CAE7B,CAFD;;AAGA,QAAMM,kBAAkB,GAAG,CAACjB,kBAAD,IAAuBE,kBAAlD;AAEA,QAAMgB,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA2B,cAAtE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEP,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEQ,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAErB,YAAZ;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,EAAE,EAAC,MADf;AAEC,QAAA,QAAQ,EAAES,sBAFX;AAGC,QAAA,KAAK,EAAER;AAHR;AAAA;AAAA;AAAA;AAAA,cAFF,EAOImB,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnDD;;GAAMtB,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const[enteredName, setEnteredName]=useState('');\n  const [enteredNameIsValid,setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched,setEnteredNameTouched] = useState(false);\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('Name Input is Valid')\n    }\n  }, []);\n  \n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if(enteredName.trim()===''){\n      setEnteredNameIsValid(false);\n\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log(enteredName)\n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue)\n  }\n\n  const onChangeHandler = (e) =>{\n      \n  }\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid': 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} \n        type='text' id='name'\n         onChange={nameInputChangeHandler} \n         value={enteredName}\n         />\n         {nameInputIsInvalid && <p className='error-text'>Name must not be empty </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}