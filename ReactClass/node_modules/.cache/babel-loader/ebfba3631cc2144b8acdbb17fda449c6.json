{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/ReactClass/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from 'react';\nimport UsersContext from '../store/users-context';\nimport styles from './UserFinder.module.css';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: DUMMY_USERS,\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    //send http request\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={styles.finder}>\n//         <input type='search' onChange={searchChangeHandler} />\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment >\n//   );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/ReactClass/src/components/UserFinder.js"],"names":["Fragment","useState","useEffect","Component","UsersContext","styles","Users","UserFinder","constructor","state","filteredUsers","DUMMY_USERS","searchTerm","componentDidMount","setState","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","finder","bind","contextType"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAIA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAI9BK,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,aAAa,EAAEC,WADR;AAEPC,MAAAA,UAAU,EAAE;AAFL,KAAX;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,aAAa,EAAE,KAAKK,OAAL,CAAaC;AAA7B,KAAd;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAEpC,QAAGA,SAAS,CAACP,UAAV,KAAyB,KAAKH,KAAL,CAAWG,UAAvC,EAAkD;AAC9C,WAAKE,QAAL,CAAc;AACVJ,QAAAA,aAAa,EAAEC,WAAW,CAACS,MAAZ,CAAoBC,IAAD,IAClCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKd,KAAL,CAAWG,UAA9B,CADe;AADL,OAAd;AAKH;AAEJ;;AAEDY,EAAAA,mBAAmB,CAACC,KAAD,EAAO;AACtB,SAAKX,QAAL,CAAc;AACVF,MAAAA,UAAU,EAAEa,KAAK,CAACC,MAAN,CAAaC;AADf,KAAd;AAGH;;AAIDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,QAAD;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,MAAvB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/C6B,C,CAsDlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5EMH,U,CAEKwB,W,GAAc3B,Y;AA4EzB,eAAeG,UAAf","sourcesContent":["import { Fragment, useState, useEffect, Component } from 'react';\nimport UsersContext from '../store/users-context';\n\nimport styles from './UserFinder.module.css';\n\nimport Users from './Users';\n\n\n\nclass UserFinder extends Component{\n\n    static contextType = UsersContext;\n\n    constructor(){\n        super();\n        this.state={\n            filteredUsers: DUMMY_USERS,\n            searchTerm: ''\n        }\n    }\n\n    componentDidMount(){\n        //send http request\n        this.setState({filteredUsers: this.context.users});\n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        if(prevState.searchTerm !== this.state.searchTerm){\n            this.setState({\n                filteredUsers: DUMMY_USERS.filter((user) => \n                user.name.includes(this.state.searchTerm)\n                ),\n            });\n        }\n\n    }\n\n    searchChangeHandler(event){\n        this.setState({\n            searchTerm: event.target.value\n        });\n    }\n\n   \n\n    render(){\n        return (\n            <Fragment>\n                \n              <div className={styles.finder}>\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n              </div>\n              <Users users={this.state.filteredUsers} />\n            </Fragment >\n          );\n    }\n\n\n}\n\n\n\n//  const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   return (\n//     <Fragment>\n//       <div className={styles.finder}>\n//         <input type='search' onChange={searchChangeHandler} />\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment >\n//   );\n// };\n\nexport default UserFinder;"]},"metadata":{},"sourceType":"module"}