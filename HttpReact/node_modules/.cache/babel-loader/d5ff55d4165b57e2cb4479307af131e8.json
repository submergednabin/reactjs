{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Axios from 'axios';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('Something Went Wrong Here');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(result => {\n        return {\n          id: result.episode_id,\n          title: result.title,\n          openingText: result.opening_crawl,\n          releaseData: result.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false); // Axios.get('https://swapi.dev/api/films/').then(resp  => {\n    //     const movieDatas = resp.data.results;\n    //     const transformedMovies = movieDatas.map(movieData => {\n    //       return {\n    //         id: movieData.id,\n    //         title:movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseData: movieData.release_date\n    //       }\n    //     });\n    //     setMovies(transformedMovies);\n    // });\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Found No MOvies\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js"],"names":["React","useState","useEffect","MoviesList","Axios","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","result","id","episode_id","title","openingText","opening_crawl","releaseData","release_date","message","content","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAK,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;;AAIC,iBAAeA,kBAAf,GAAmC;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACH,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACC,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AACnD,eAAO;AACLC,UAAAA,EAAE,EAAED,MAAM,CAACE,UADN;AAELC,UAAAA,KAAK,EAACH,MAAM,CAACG,KAFR;AAGLC,UAAAA,WAAW,EAAEJ,MAAM,CAACK,aAHf;AAILC,UAAAA,WAAW,EAAEN,MAAM,CAACO;AAJf,SAAP;AAOD,OARyB,CAA1B;AASEtB,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACA,KAhBJ,CAgBK,OAAMT,KAAN,EAAY;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACD;;AACDrB,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAtB8B,CAwBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,MAAIsB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAd;;AACA,MAAGzB,MAAM,CAAC0B,MAAP,GAAe,CAAlB,EAAoB;AAClBD,IAAAA,OAAO,gBAAG,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAGzB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AACD,MAAGI,KAAH,EAAS;AACPqB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIrB,KAAJ,CAAV;AACD;;AACD,MAAGF,SAAH,EAAa;AACXuB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAV;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEnB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,OADH,CAJA,CADF;AAUD;;AAED,eAAe1B,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Axios from 'axios';\nfunction App() {\n  const [movies, setMovies]= useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const[error, setError] = useState(null);\n\n  useEffect(()=>{\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n   async function fetchMoviesHandler(){\n     setIsLoading(true);\n     setError(null);\n     try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      if(!response.ok){\n        throw new Error('Something Went Wrong Here')\n      }\n      const data = await response.json();\n       const transformedMovies = data.results.map(result => {\n         return {\n           id: result.episode_id,\n           title:result.title,\n           openingText: result.opening_crawl,\n           releaseData: result.release_date\n         }\n     \n       });\n         setMovies(transformedMovies);\n        } catch(error){\n          setError(error.message);\n        }\n        setIsLoading(false);\n     \n    // Axios.get('https://swapi.dev/api/films/').then(resp  => {\n    //     const movieDatas = resp.data.results;\n    //     const transformedMovies = movieDatas.map(movieData => {\n    //       return {\n    //         id: movieData.id,\n    //         title:movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseData: movieData.release_date\n    //       }\n    //     });\n    //     setMovies(transformedMovies);\n    // });\n  }\n  let content = <p>Found No MOvies</p>\n  if(movies.length> 0){\n    content = <MoviesList movies ={movies}/>\n  }\n  if(error){\n    content = <p>{error}</p>\n  }\n  if(isLoading){\n    content = <p>Loading</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n    <section>\n      {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}