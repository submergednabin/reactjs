{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Axios from 'axios';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // const showHandler = () => {\n  //   if(movies.length>0){\n  //     setShowMoviesList(true)\n  //   }\n  // }\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(result => {\n      return {\n        id: result.episode_id,\n        title: result.title,\n        openingText: result.opening_crawl,\n        releaseData: result.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false); // Axios.get('https://swapi.dev/api/films/').then(resp  => {\n    //     const movieDatas = resp.data.results;\n    //     const transformedMovies = movieDatas.map(movieData => {\n    //       return {\n    //         id: movieData.id,\n    //         title:movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseData: movieData.release_date\n    //       }\n    //     });\n    //     setMovies(transformedMovies);\n    // });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 44\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 46\n    }\n  }, \"Found No movies\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }\n  }, \"Loading......\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js"],"names":["React","useState","MoviesList","Axios","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","result","id","episode_id","title","openingText","opening_crawl","releaseData","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAK,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAjC,CAHa,CAKb;AACA;AACA;AACA;AACA;;AACC,iBAAeU,kBAAf,GAAmC;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEC,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AACnD,aAAO;AACLC,QAAAA,EAAE,EAAED,MAAM,CAACE,UADN;AAELC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAFR;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACK,aAHf;AAILC,QAAAA,WAAW,EAAEN,MAAM,CAACO;AAJf,OAAP;AAOD,KARyB,CAA1B;AASEpB,IAAAA,SAAS,CAACU,iBAAD,CAAT;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAf8B,CAgBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAGD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACJ,SAAD,IAAcF,MAAM,CAACsB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEtB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvC,EAEI,CAACE,SAAD,IAAcF,MAAM,CAACsB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFzC,EAGIpB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHjB,CAJA,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Axios from 'axios';\nfunction App() {\n  const [movies, setMovies]= useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const[error, setError] = useState(null);\n\n  // const showHandler = () => {\n  //   if(movies.length>0){\n  //     setShowMoviesList(true)\n  //   }\n  // }\n   async function fetchMoviesHandler(){\n     setIsLoading(true);\n     const response = await fetch('https://swapi.dev/api/films/');\n     const data = await response.json();\n   \n      const transformedMovies = data.results.map(result => {\n        return {\n          id: result.episode_id,\n          title:result.title,\n          openingText: result.opening_crawl,\n          releaseData: result.release_date\n        }\n    \n      });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n    // Axios.get('https://swapi.dev/api/films/').then(resp  => {\n    //     const movieDatas = resp.data.results;\n    //     const transformedMovies = movieDatas.map(movieData => {\n    //       return {\n    //         id: movieData.id,\n    //         title:movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseData: movieData.release_date\n    //       }\n    //     });\n    //     setMovies(transformedMovies);\n    // });\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n    <section>\n       {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n       {!isLoading && movies.length === 0 && <p>Found No movies</p> }\n       {isLoading && <p>Loading......</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}