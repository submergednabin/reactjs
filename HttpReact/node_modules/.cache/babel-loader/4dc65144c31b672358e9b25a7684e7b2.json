{"ast":null,"code":"var _jsxFileName = \"/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // const [showMoviesList, setShowMoviesList] = useState(false);\n  // const showHandler = () => {\n  //   if(movies.length>0){\n  //     setShowMoviesList(true)\n  //   }\n  // }\n\n  function fetchMoviesHandler() {\n    fetch('https://swapi.dev/api/films/').then(resp => {\n      return resp.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(result => {\n        return {\n          id: result.episode_id,\n          title: result.title,\n          openingText: result.opening_crawl,\n          releaseData: result.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/HttpReact/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","fetchMoviesHandler","fetch","then","resp","json","data","transformedMovies","results","map","result","id","episode_id","title","openingText","opening_crawl","releaseData","release_date"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC,CADa,CAEb;AAEA;AACA;AACA;AACA;AACA;;AACC,WAASK,kBAAT,GAA6B;AAC3BC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CACCC,IAAI,IAAI;AACN,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAHF,EAICF,IAJD,CAIMG,IAAI,IAAE;AACX,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AACnD,eAAO;AACLC,UAAAA,EAAE,EAAED,MAAM,CAACE,UADN;AAELC,UAAAA,KAAK,EAACH,MAAM,CAACG,KAFR;AAGLC,UAAAA,WAAW,EAAEJ,MAAM,CAACK,aAHf;AAILC,UAAAA,WAAW,EAAEN,MAAM,CAACO;AAJf,SAAP;AAMD,OAPyB,CAA1B;AAQEjB,MAAAA,SAAS,CAACO,iBAAD,CAAT;AACH,KAdA;AAeF;;AAGD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEN,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies]= useState([]);\n  // const [showMoviesList, setShowMoviesList] = useState(false);\n\n  // const showHandler = () => {\n  //   if(movies.length>0){\n  //     setShowMoviesList(true)\n  //   }\n  // }\n   function fetchMoviesHandler(){\n     fetch('https://swapi.dev/api/films/').then(\n      resp => {\n        return resp.json();\n      }\n    ).then(data=>{\n      const transformedMovies = data.results.map(result => {\n        return {\n          id: result.episode_id,\n          title:result.title,\n          openingText: result.opening_crawl,\n          releaseData: result.release_date\n        }\n      });\n        setMovies(transformedMovies);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}