{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // const counterReducer = (state = initialState , action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1, \n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.value,\n//             showCounter: state.counter,\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// } ;\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/ReactRedux/src/store/index.js"],"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAKA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAzB;AAGA,MAAMC,SAAS,GAAEJ,WAAW,CAAC;AACzBK,EAAAA,IAAI,EAAE,gBADmB;AAEzBC,EAAAA,YAAY,EAAEJ,gBAFW;AAGzBK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACH,KAHK;;AAINO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACH;;AANK;AAHe,CAAD,CAA5B,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;AACzBW,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OAAxB;AAAiCG,IAAAA,IAAI,EAAEX,SAAS,CAACQ;AAAjD;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAA9B;AAEP,eAAeN,KAAf","sourcesContent":["// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\n\n\nconst initialAuthState = {\n    isAuthenticated: false\n}\nconst authSlice =createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\n// const counterReducer = (state = initialState , action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1, \n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.value,\n//             showCounter: state.counter,\n\n//         }\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// } ;\n// const store = createStore(counterReducer);\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}