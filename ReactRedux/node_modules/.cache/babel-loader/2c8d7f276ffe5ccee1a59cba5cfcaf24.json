{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState , action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1, \n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.value,\n//             showCounter: state.counter,\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// } ;\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/ReactRedux/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","store","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAGA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,KAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADG,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\nconst initialState = { counter: 0, showCounter: true };\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.value;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\n// const counterReducer = (state = initialState , action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1, \n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.value,\n//             showCounter: state.counter,\n\n//         }\n//     }\n\n//     if(action.type === 'toggle'){\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// } ;\n// const store = createStore(counterReducer);\nconst store = configureStore({\n    reducer: counterSlice.reducer,\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}