{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.value,\n      showCounter: state.counter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/nabinkhatri/Documents/ReactProjects/newReactProject/ReactRedux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AACAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAE,SADE;AAERH,EAAAA,YAFQ;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KANK;;AAONO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,KAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACJ,WAAN,GAAoB,CAACI,KAAK,CAACJ,WAA3B;AACH;;AAZK;AAHF,CAAD,CAAX;;AAmBA,MAAMU,cAAc,GAAG,YAAmC;AAAA,MAAlCN,KAAkC,uEAA1BN,YAA0B;AAAA,MAAXS,MAAW;;AACtD,MAAGA,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAM;AACFZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADvB;AAEFC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFjB,KAAN;AAIH;;AACD,MAAGO,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAO;AACHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFhB,KAAP;AAIH;;AAED,MAAGO,MAAM,CAACI,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,WAAO;AACHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,KAD7B;AAEHR,MAAAA,WAAW,EAAEI,KAAK,CAACL;AAFhB,KAAP;AAKH;;AAED,MAAGQ,MAAM,CAACI,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAO;AACHX,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADjB;AAEHD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFZ,KAAP;AAIH;;AAED,SAAOK,KAAP;AACH,CA9BD;;AA+BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = { counter: 0, showCounter: true };\ncreateSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.value;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nconst counterReducer = (state = initialState , action) => {\n    if(action.type === 'increment'){\n        return{\n            counter: state.counter + 1, \n            showCounter: state.showCounter\n        }\n    }\n    if(action.type === 'decrement'){\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n\n    if(action.type === 'increase'){\n        return {\n            counter: state.counter + action.value,\n            showCounter: state.counter,\n\n        }\n    }\n\n    if(action.type === 'toggle'){\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        }\n    }\n\n    return state;\n} ;\nconst store = createStore(counterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}